{
  "name": "ai-system-prompt-generator",
  "version": "1.0.0",
  "description": "AI System Prompt Generator - Full-stack application with React frontend and FastAPI backend",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && python -m uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && python -m pip install -e .",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && python -m pytest",
    "test:watch": "concurrently \"npm run test:frontend:watch\" \"npm run test:backend:watch\"",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:backend:watch": "cd backend && python -m pytest --watch",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && python -m flake8 app tests",
    "lint:fix": "npm run lint:frontend:fix && npm run lint:backend:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "lint:backend:fix": "cd backend && python -m black app tests && python -m isort app tests",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "npm run lint:backend:fix",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && python -m mypy app",
    "clean": "npm run clean:frontend && npm run clean:backend",
    "clean:frontend": "cd frontend && rm -rf dist node_modules",
    "clean:backend": "cd backend && rm -rf build dist *.egg-info __pycache__ .pytest_cache .mypy_cache",
    "install": "npm run install:frontend && npm run install:backend",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && python -m pip install -r requirements.txt",
    "install:dev": "npm run install:frontend && npm run install:backend:dev",
    "install:backend:dev": "cd backend && python -m pip install -r requirements.txt && python -m pip install -e .[dev]",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "docker:clean": "docker-compose down -v --rmi all",
    "setup": "npm run install:dev && npm run docker:build",
    "start": "docker-compose up",
    "stop": "docker-compose down",
    "restart": "npm run stop && npm run start",
    "health": "curl -f http://localhost:3000 && curl -f http://localhost:8000/health",
    "backup": "docker-compose exec -T db pg_dump -U postgres prompt_generator > backup.sql",
    "restore": "docker-compose exec -T db psql -U postgres prompt_generator < backup.sql"
  },
  "keywords": [
    "ai",
    "prompts",
    "react",
    "fastapi",
    "typescript",
    "python",
    "fullstack"
  ],
  "author": "AI Prompt Generator Team",
  "license": "MIT",
  "dependencies": {
    "react": "^19.1.1",
    "react-dom": "^19.1.1"
  },
  "devDependencies": {
    "@types/node": "^24.5.2",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "@vitejs/plugin-react": "^5.0.3",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "typescript": "^5.9.2",
    "vite": "^7.1.7"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
