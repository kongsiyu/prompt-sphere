# Pre-commit hooks configuration for AI System Prompt Generator
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # General file and formatting checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File format checks
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml

      # Python specific checks
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements

      # General checks
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

      # Security checks
      - id: detect-private-key
      - id: detect-aws-credentials

  # Python formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        files: ^backend/
        language_version: python3.11
        args: [--config=backend/.black.toml]

  # Python import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: ^backend/
        args: [--settings-file=backend/.isort.cfg]

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        files: ^backend/
        args: [--config=backend/.flake8]

  # Python type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^backend/app/
        additional_dependencies:
          - types-requests
          - pydantic
          - fastapi
        args: [--config-file=backend/pyproject.toml]

  # JavaScript/TypeScript formatting with Prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: ^frontend/
        types_or: [javascript, jsx, ts, tsx, json, yaml, css, scss, html, markdown]
        exclude: |
          (?x)^(
            frontend/package-lock\.json|
            frontend/dist/.*|
            frontend/node_modules/.*
          )$

  # ESLint for JavaScript/TypeScript
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.0.0-alpha.2
    hooks:
      - id: eslint
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        additional_dependencies:
          - eslint@^8.0.0
          - eslint-config-react-app
          - '@typescript-eslint/parser'
          - '@typescript-eslint/eslint-plugin'
        args: [--config=frontend/.eslintrc.js, --fix]

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: [--ignore, DL3008, --ignore, DL3009, --ignore, DL3015]

  # Markdown formatting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: |
          (?x)^(
            CHANGELOG\.md|
            LICENSE\.md|
            \.github/.*\.md
          )$

  # YAML formatting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-d, relaxed]
        exclude: |
          (?x)^(
            \.github/.*\.yml|
            \.github/.*\.yaml
          )$

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            \.env\.example|
            .*\.env\.example|
            package-lock\.json|
            poetry\.lock
          )$

  # Python security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        files: ^backend/
        args: [-r, -x, tests]

# Configuration for individual tools
default_language_version:
  python: python3.11
  node: "18.17.0"

# Files to exclude from all hooks
exclude: |
  (?x)^(
    .*\.min\.js|
    .*\.min\.css|
    \.git/.*|
    \.venv/.*|
    node_modules/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    dist/.*|
    build/.*|
    \.egg-info/.*
  )$

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false